library(devtools)
load_all("../..")
library(testthat)
?error
?expect_error
throws_error("Initial value for parameter 4 out of range")
fit
summ
summ
logLik(spl
)
dput(logLik(spl)
)
names(summ)
names(summ)
summ[1:4,]
summ
summ$est[1]
dput(summ$est[1])
summ
dput(summ$est[1]
)
spl
dput(    logLik(spl))
dput(    spl$loglik)
dput(spl$loglik  +   sum(log(bc$recyrs[bc$censrec==1])))
dput(    spl$AIC  +   sum(log(bc$recyrs[bc$censrec==1])))
spl$gamma
spl
coef(spl)
?expect_equivalent
spl$res
spl$res$se
spl$res[,"se"]
splh
logLik(splh)
options(digits=16)
logLik(splh)
logLik(spln)
a
b1
fit
spl
logLik(spl)
logLik(spl)
debug(flexsurv.splineinits)
    spl <- flexsurvspline(Surv(rep(1.9, nrow(bc2)), recyrs, censrec) ~ 1, data=bc2, k=0)
wt
form
logH
surv
cox
Y[1:10,]
surv
Y
form
surv
names(surv)
surv
Q
load_all("../..")
logLik(spl)
wt
logLik(fitws)
logLik(fitw)
logLik.survreg
survival::logLik.survreg
survival:::logLik.survreg
load_all("../..")
logLik(fitw)
logLik(fitws)
attr(logLik(fitws),"nobs")
nrow(ovarian)
fitws$df
fitws$df.residual
?survreg
?survreg.object
survreg
fitws
survreg(formula = Surv(ovarian$futime, ovarian$fustat) ~ 1, data = ovarian, dist="weibull")
wt
wei
fitln$loglik
fite
rm(hfoo,Hfoo)
hfoo
ls(envir=flexsurv.globals)
rm(hfoo, env="flexsurv.globals")
rm(hfoo, env=flexsurv.globals)
rm(hfoo, envir=flexsurv.globals)
rm(Hfoo, envir=flexsurv.globals)
rm(Hfoo, envir=flexsurv.globals)
hfoo
rm(hfoo)
ls(envir=flexsurv.globals)
rm(hfoo, Hfoo, envir=flexsurv.globals)
ls(envir=flexsurv.globals)
rm(hfoo, Hfoo, dfoo, pfoo, envir=flexsurv.globals)
ls(envir=flexsurv.globals)
?exists
rm(ovarian2)
ls(envir=flexsurv.globals)
load_all("../..")
?test.that
?test_that
ls
ls()
?ls
?env
?envir
?environment
?exists
?exists
where
devtools::install_github("hadley/pryr")
where(form.dp)
environment(form.dp)
environment("namespace:flexsurv")
environment(environment(form.dp))
load_all("../..")
load_all("../..")
foo2
rm(hfoo, envir=flexsurv.globals)
hfoo
rm(hfoo)
hfoo
ls(envir=flexsurv.globals)
rm(hfoo, dfoo, pfoo, Hfoo, envir=flexsurv.globals)
load_all("../..")
ls(envir=flexsurv.globals)
form.dp
load_all("../..")
?eists
?sxists
?exists
load_all("../..")
load_all("../..")
parent.frame()
exists("foo2", frame=parent.frame())
?exists
?sys.frame
exists("hfoo")
exists(hfoo)
exists("hfoo", where=parent.frame())
ls(parent.frame())
ls(parent.frame(parent.frame()))
ls(parent.frame(-1))
sys.parents()
exists("hfoo", where=2)
exists("hfoo", where=1)
exists("hfoo", where=0)
exists("hfoo", where=3)
ls(pos=-1)
ls(pos=-2)
ls(pos=0)
parent.frame(2)
ls(parent.frame(2))
exists("hfoo", where=parent.frame(2))
get()
get("hfoo")
hget
?get
foo()
foo2()
get("hfoo", where=parent.frame())
get("hfoo", envir=parent.frame())
get("hfoo", envir=parent.frame(2))
Q
load_all("../..")
hbar(1:3)
hbar(1:10,1:10)
hbar(1:10, 1)
hbar(1, 1:10)
load_all("../..")
fitf <- flexsurvreg(Surv(futime, fustat) ~ 1, data = ovarian, dist=custom.bar)
hu(1:10)
hu(1:10, rate=1:10)
h(1:10, rate=1:10)
h(1, rate=1:10)
h(1, rrate=1:10)
hu(1:10, rate=1:10)
Q
load_all("../..")
debug(minusloglik.flexsurv
)
n
logdens
prob
hbar(1:10)
n
n
dbar(1:10)
hbar(1:10)
Hbar(1:10)
densfn(1:10)
probfn(1:10)
logdens
dcall
densfn(dcall$x)
densfn(dcall$x, rate=0.001)
dexp(dcall$x)
dexp(dcall$x, log=TRUE, rate=0.001)
densfn(dcall$x, log=TRUE, rate=0.001)
densfn(dcall$x, rate=0.001)
densfn
h
debug(densfn)
n
h
p(x, rate=0.001)
pexp(x, rate=0.001)
x
Hexp(x, rate=0.001)
1 - exp(-Hexp(x, rate=0.001))
Hexp(x)
pexp(x)
p(x, ...)
list(...)
p(x, rate=0.001)
p
n
c
n
probfn
probfn(pcall$q, pcall$rate)
probfn(pcall$q, rate=0.001)
pexp(pcall$q, rate=0.001)
Hfn(pcall$q, rate=0.001)
Hfn(pcall$q, rate=1)
exp(-Inf)
Hfn
dbar
Q
load_all("../..")
debug(form.dp)
n
hname
dname
n
H
H(100, rate=0.001)
H(100, rate=1)
h
integrate(h, 0, 100, rate=0.001)
Q
load_all("../..")
fitf
fitf
load_all("../..")
fitf
fite
?Vectorize 
?Vectorize 
?Vectorize
fitf
hbar2(1:10, 1, 1)
rm(hbar2, hbar, envir=flexsurv.globals)
ls(envir="flexsurv.globals")
ls(envir=flexsurv.globals)
rm(list=ls(envir=flexsurv.globals), envir=flexsurv.globals)
?rm
load_all("../..")
fitf <- flexsurvreg(Surv(futime, fustat) ~ 1, data = ovarian, dist=custom.bar2)
ls(envir=flexsurv.globals)
load_all("../..")
load_all("../..")
fitf <- flexsurvreg(Surv(futime, fustat) ~ 1, data = ovarian, dist=custom.bar2)
rm(list=ls(envir=flexsurv.globals), envir=flexsurv.globals)
fitf <- flexsurvreg(Surv(futime, fustat) ~ 1, data = ovarian, dist=custom.bar2)
options()
clean.dp()
c
load_all("../..")
rm("foo")
load_all("../..")
fitgp
fitgo
ovarian
hbar2
rm(hbar2)
rm(Hbar2)
rm(list=ls(), envir=flexsurv.globals)
ls(envir=flexsurv.globals)
rm("hbar","Hbar",envir=flexsurv.globals)
rm("hbar2","Hbar2",envir=flexsurv.globals)
hbar2(100)
debug(minusloglik.flexsurv)
n
logdens
prob
densfn(1:10)
densfn(dcall$x, dcall$a)
densfn(dcall$x, a=dcall$a)
dcall$x
dcall$a
dexp(dcall$x, rate=dcall$a)
densfn(1, 1)
densfn(1, a=1)
dexp(1, rate=1)
hbar2
hbar2(1:10, a=1)
hfn(1:10, a=1)
Hfn(1:10, a=1)
hbar2(1:10, a=1)
1 - probfn(1:10, a=1)
1 - pexp(1:10, rate=1)
1 - H(1:10, a=1)
1 - Hexp(1:10, a=1)
1 - Hexp(1:10, rate=1)
Hexp(1:10, rate=1)
Hfn(1:10, rate=1)
Hfn(1:10, a=1)
Hexp(1:10, rate=1)
debug(Hfn)
Hfn(1:10, a=1)
FUN
n
c
Hfn(1:10,rate=1)
c
Hfn(1:10,rate=1)
Hfn
Hfn(1:10,rate=1)
Hfn(1:10,a=1)
Hexp(1:10,a=1)
Hexp(1:10,rate=1)
hfn
hfn(1:10, rate=1)
hfn(1:10, a=1)
c
undebug(hfn)
undebug(Hfn)
probfn(1:10, a=1)
pexp(1:10, rate=1)
a
probfn(1:10, a=a)
rm(a)
c
c
c
c
c
c
c
c
cl
c
c
Q
undebug(minusloglik.flexsurv)
q()
library(devtools)
library(testthat)
load_all("../..")
msfit.default
mstate::msfit
msfit
flexsurv::msfit
e0
model.frame(e0)[,"trans"]
load_all("../..")
data.frame()
x <- data.frame()
x[,"f"] <- 1:3
load_all("../..")
system.time(msfit.flexsurvreg(e0, t=c(1,10,50,100), tvar="trans", trans=tmat))
bos
library(msm)
bos[1:20,]
help(package="plyr")
?mapvalues
bos3[1:10,]
?duplicated
duplicated(bos3$state)
?replicated
?replicate
bos3
bos3
table(bos3$state)
table(bos$state)
bos4
bos3[1:2,]
bos4.ms
getwd()
setwd("../../../devel")
getwd()
bos3
bos3
setwd("../flexsurv/tests/testthat")
rm(list=ls())
ls()
load_all("../..")
bos
bos3
bos4
bos3[1:2,]
save(bos3, "../../data/bos3.rda")
save(bos3, file="../../data/bos3.rda")
summary(bos3$time)
ems
cs
?probtrans
msm
bos3
data(bos3)
msm:::bos3
q()
n
library(devtools)
library(testthat)
load_all("../..")
fitg
table(ovarian$rx)
debug(form.model.matrix)
n
newdat
newdata
                 summary(fitg, newdata=data.frame(rx=1), ci=FALSE)[[1]]
covnames
newdata
Q
debug(concat.formulae)
fitg <- flexsurvreg(formula = Surv(ovarian$futime, ovarian$fustat) ~ factor(rx), data = ovarian, dist="weibull")
covnames
lapply(forms, terms)
lapply(forms, function(x)all.vars(delete.response(terms(x))))
unlist(lapply(forms, function(x)all.vars(delete.response(terms(x)))))
 Q
load_all("../..")
fitg <- flexsurvreg(formula = Surv(ovarian$futime, ovarian$fustat) ~ factor(rx), data = ovarian, dist="weibull")
                 summary(fitg, newdata=data.frame(rx=1), ci=FALSE)[[1]]
throws_error
gives_warning
?tryCatch
?tryCatch
?tryCatch
tryCatch(stop(e), error = function(e) e)
demo(error.catching)
test_file
test_file("~/work/flexsurv/flexsurv/tests/testthat/test_utils.R")
test_file("~/work/flexsurv/flexsurv/tests/testthat/test_spline.R")
dweibull(0,1,1)
dweibull(0,0.1,0.1)
library(devtools)
library(testthat)
load_all("../..")
load_all("../..")
summary(fitg)
ovarian[1:2,]
ovarian
fitg2
fitg
load_all("../..")
summary(fitg2)
summary(fitg2, newdata=data.frame(rx=1))
load_all("../..")
fitg2 <- flexsurvreg(formula = Surv(ovarian$futime, ovarian$fustat) ~ factor(rx) + factor(ecog.ps), data = ovarian, dist="weibull")
parnames
colnames(X)
mml
dweibull
dlist$pars
Q
load_all("../..")
fitg2 <- flexsurvreg(formula = Surv(ovarian$futime, ovarian$fustat) ~ factor(rx) + factor(ecog.ps), data = ovarian, dist="weibull")
load_all("../..")
fitg2 <- flexsurvreg(formula = Surv(ovarian$futime, ovarian$fustat) ~ factor(rx) + factor(ecog.ps), data = ovarian, dist="weibull")
loc.cnames
anc.cnames
anc.cnames
Q
load_all("../..")
fitg2 <- flexsurvreg(formula = Surv(ovarian$futime, ovarian$fustat) ~ factor(rx) + factor(ecog.ps), data = ovarian, dist="weibull")
c
fitg2
load_all("../..")
fitg2 <- flexsurvreg(formula = Surv(ovarian$futime, ovarian$fustat) ~ factor(rx) + factor(ecog.ps), data = ovarian, dist="weibull")
fitg2
