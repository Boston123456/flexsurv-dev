
if(0){

## Note these currently don't work when the d or h functions are
## defined in functions or testthat environments.  To find the h or d
## function in form.dp, get() and exists() would need to look in
## parent.frame(2), i.e. the grandparent calling environment, but
## inherits=TRUE searches back through _enclosing_ (definition)
## environments.

## Even with d/h functions defined at top level, these still don't
## work when called from R CMD check.

hfoo <- function(x, rate=1){ rate }
Hfoo <- function(x, rate=1){ rate*x }
test_that("Custom distributions: hazard and cumulative hazard",{
    custom.foo <- list(name="foo", pars=c("rate"), location="rate", transforms=c(log), inv.transforms=c(exp), inits=function(t)1/median(t))
    fitf <- flexsurvreg(Surv(futime, fustat) ~ 1, data = ovarian, dist=custom.foo)
    fite <- flexsurvreg(Surv(futime, fustat) ~ 1, data = ovarian, dist="exp")
    expect_equal(fitf$loglik, fite$loglik)
})

hbar <- function(x, rate=1){ rate }
hbar <- Vectorize(hbar)
test_that("Custom distributions: hazard only",{
    custom.bar <- list(name="bar", pars=c("rate"), location="rate", transforms=c(log), inv.transforms=c(exp), inits=function(t)1/mean(t))
    fitf <- flexsurvreg(Surv(futime, fustat) ~ 1, data = ovarian, dist=custom.bar)
    fite <- flexsurvreg(Surv(futime, fustat) ~ 1, data = ovarian, dist="exp")
    expect_equal(fitf$loglik, fite$loglik)
})


dbaz <- function(x, rate=1, log=FALSE){
    if (log) {log(rate) - x*rate} else rate*exp(-rate*x)
}
dbaz <- Vectorize(dbaz)
test_that("Custom distributions: density only",{
    custom.baz <- list(name="baz", pars=c("rate"), location="rate", transforms=c(log), inv.transforms=c(exp), inits=function(t)1/mean(t))
    fitf <- flexsurvreg(Surv(futime, fustat) ~ 1, data = ovarian, dist=custom.baz)
    fite <- flexsurvreg(Surv(futime, fustat) ~ 1, data = ovarian, dist="exp")
    expect_equal(fitf$loglik, fite$loglik)
})

## Integration breaks for the Gompertz

hbar2 <- function(x, a=1, b=1){ b*exp(a*x) }
hbar2 <- Vectorize(hbar2)
custom.bar2 <- list(name="bar2", pars=c("a","b"), location="b", transforms=c(identity,log), inv.transforms=c(identity,exp), inits=function(t)c(0.001, 1/mean(t)))
fitf <- flexsurvreg(Surv(futime, fustat) ~ 1, data = ovarian, dist=custom.bar2, control=list(trace=1,REPORT=1,reltol=1e-16,maxit=10000))
fitgo <- flexsurvreg(formula = Surv(futime, fustat) ~ 1,
                     data = ovarian, dist="gompertz",
                     control=list(trace=1,REPORT=1,reltol=1e-16))

}

## test_that("Custom distributions: hazard only, unknown function, more than one arg",{
## })
## TODO a more complicated one
